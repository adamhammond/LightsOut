<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>